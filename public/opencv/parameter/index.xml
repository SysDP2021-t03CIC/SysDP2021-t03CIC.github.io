<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>パラメータ（カメラ行列、歪み）の取得 on システム創成2021 CIC担当チーム 引継ぎ資料</title>
    <link>https://sysdp2021-t03cic.github.io/opencv/parameter/</link>
    <description>Recent content in パラメータ（カメラ行列、歪み）の取得 on システム創成2021 CIC担当チーム 引継ぎ資料</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <copyright>Copyright &amp;copy; 2021 a Hugo theme by [Gethugothemes](https://gethugothemes.com/)</copyright>
    <lastBuildDate>Mon, 20 Dec 2021 13:54:50 +0900</lastBuildDate><atom:link href="https://sysdp2021-t03cic.github.io/opencv/parameter/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>カメラの特徴に関する前置き</title>
      <link>https://sysdp2021-t03cic.github.io/opencv/parameter/description/</link>
      <pubDate>Sat, 25 Dec 2021 08:59:39 +0900</pubDate>
      
      <guid>https://sysdp2021-t03cic.github.io/opencv/parameter/description/</guid>
      <description>MathJax.Hub.Config({tex2jax: {inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]],processEscapes: true,processEnvironments: true,skipTags: [&#39;script&#39;, &#39;noscript&#39;, &#39;style&#39;, &#39;textarea&#39;, &#39;pre&#39;],TeX: { equationNumbers: { autoNumber: &#34;AMS&#34; },extensions: [&#34;AMSmath.js&#34;, &#34;AMSsymbols.js&#34;] }}});MathJax.Hub.Queue(function() {// Fix  tags after MathJax finishes running. This is a// hack to overcome a shortcoming of Markdown. Discussion at// https://github.com/mojombo/jekyll/issues/199var all = MathJax.Hub.getAllJax(), i;for(i = 0; i カメラで撮影される映像(画像)は、カメラのレンズなどの種類によって様々な歪みが生じる。 この歪みを修正して、ARマーカーの正しい距離や角度を求めるために、カメラキャリブレーション(カメラ行列、歪み)を知っておく必要がある。
 カメラ行列</description>
    </item>
    
    <item>
      <title>カメラ行列の計測</title>
      <link>https://sysdp2021-t03cic.github.io/opencv/parameter/calculation/</link>
      <pubDate>Sat, 25 Dec 2021 08:59:39 +0900</pubDate>
      
      <guid>https://sysdp2021-t03cic.github.io/opencv/parameter/calculation/</guid>
      <description>カメラ行列・歪み係数の計測の方法  以下の内容のスクリプトを作成。  using System; using System.Collections; using System.Collections.Generic; using OpenCVForUnity.Calib3dModule; using OpenCVForUnity.ImgprocModule; using OpenCVForUnity.CoreModule; using OpenCVForUnity.ArucoModule; using OpenCVForUnity.UnityUtils; using UnityEngine; namespace EstimateTargetTransform_OCVfU { public class CameraParaCal { private Mat img; private Mat gray; private Size crossNum; private List&amp;lt;Mat&amp;gt; objPoints; private List&amp;lt;Mat&amp;gt; imgPoints; private Mat pattern_points; public Mat cameraMatrix; public Mat distCoeffs; public double[] cameraArray; public double[] distArray; bool calculating; // Start is called before the first frame update  public CameraParaCal() { gray = new Mat(); objPoints = new List&amp;lt;Mat&amp;gt;(); imgPoints = new List&amp;lt;Mat&amp;gt;(); pattern_points = new Mat(); cameraMatrix = new Mat(); distCoeffs = new Mat(); calculating = true; int w, h; float pattern_size = 2.</description>
    </item>
    
  </channel>
</rss>
